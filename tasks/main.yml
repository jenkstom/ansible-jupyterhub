---
# file: roles/jupyter/tasks/main.yml

- name: make sure necessary packages are installed
  apt: name={{item}} state=present update_cache=yes
  with_items: "{{jupyter_pkgs}}"
  become: yes
  become_method: sudo
  tags: jupyter

- name: install npm package configurable-http-proxy
  npm: name=configurable-http-proxy global=yes state=present
  become: yes
  become_method: sudo
  tags: jupyter

- name: add jupyter group
  group: name=jupyter state=present
  become: yes
  become_method: sudo
  tags: jupyter

- name: add jupyter user
  user: name=jupyter state=present groups=jupyter,shadow password="{{jupyterpw}}"
  become: yes
  become_method: sudo
  tags: jupyter

- name: create jupyterhub config folder
  file:
    path: "{{jupyter_config_dir}}"
    state: directory
    mode: 0755
    owner: jupyter
    group: jupyter
  become: yes
  become_method: sudo
  tags: jupyter

- name: copy jupyterhub sudospawner sudo config
  copy: src=sudo_jupyter dest=/etc/sudoers.d/jupyter mode=0440 owner=root group=root
  when:
  become: yes
  become_method: sudo
  tags: jupyter

- name: copy requirements file for jupyterhub
  copy: src=requirements.txt dest=/root/jupyterhub_requirements.txt
  become: yes
  become_method: sudo
  tags: jupyter

- name: install jupyter, jupyterhub, sudospawner via pip3
  pip: executable=pip3 requirements="/root/jupyterhub_requirements.txt" extra_args='--upgrade'
  become: yes
  become_method: sudo
  tags: jupyter

- name: Check to see if config file exists
  stat:
    path: "{{jupyter_config_file}}"
  register: config_exists
  become: yes
  become_method: sudo
  tags: jupyter

- name: configure jupyterhub
  command: /usr/local/bin/jupyterhub --generate-config chdir="{{jupyter_config_dir}}"
  args:
    creates: "{{jupyter_config_file}}"
  when: config_exists.stat.exists == False
  become: yes
  become_method: sudo
  tags: jupyter
  notify: restart jupyterhub

- name: set jupyterhub admin user
  lineinfile: dest="{{jupyter_config_file}}" line="c.Authenticator.admin_users = {'jupyter'}"
  become: yes
  become_method: sudo
  tags: jupyter
  notify: restart jupyterhub

- name: set jupyterhub create users
  lineinfile: dest="{{jupyter_config_file}}" line="c.LocalAuthenticator.create_system_users = True"
  become: yes
  become_method: sudo
  tags: jupyter
  notify: restart jupyterhub

- name: set IP address
  lineinfile: dest="{{jupyter_config_file}}" line="c.JupyterHub.hub_ip = '{{jupyter_ipv4_address}}'"
  become: yes
  become_method: sudo
  tags: jupyter
  notify: restart jupyterhub

- name: set IP address
  lineinfile: dest="{{jupyter_config_file}}" line="c.JupyterHub.ip = '{{jupyter_ipv4_address}}'"
  become: yes
  become_method: sudo
  tags: jupyter
  notify: restart jupyterhub

- name: set IP address
  lineinfile: dest="{{jupyter_config_file}}" line="c.JupyterHub.proxy_api_ip = '{{jupyter_ipv4_address}}'"
  become: yes
  become_method: sudo
  tags: jupyter
  notify: restart jupyterhub

- name: deploy jupyterhub systemd unit
  template:
    src: jupyterhub.service.j2
    dest: "/etc/systemd/system/jupyterhub.service"
    mode: 755
    owner: root
    group: root
  become: yes
  become_method: sudo
  tags: jupyter
  notify: restart jupyterhub

- name: reload systemd to make new unit available
  systemd:
    daemon_reload: yes
  become: yes
  become_method: sudo
  tags: jupyter

- name: Ensure hostname is in /etc/hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: "{{ansible_hostname}}"
    line: "{{ansible_default_ipv4.address}}  {{ansible_hostname}}"
  become: yes
  become_method: sudo
  tags: jupyter

- name: Check to see if certificate exists
  stat:
    path: "{{jupyter_tls_cert}}"
  register: cert_exists
  tags: jupyter

- name: create self-signed SSL cert
  when:
    - nossl == False
    - cert_exists.stat.exists == False
  command: openssl req -new -nodes -x509 -subj "/C={{ssl_country}}/ST={{ssl_state}}/L={{ssl_city}}/O={{ssl_org}}/CN=${ansible_fqdn}" -days 3650 -keyout "{{jupyter_tls_key}}" -out "{{jupyter_tls_cert}}" -extensions v3_ca#
  args:
    creates: "{{jupyter_tls_cert}}"
  become: yes
  become_method: sudo

- name: set jupyterhub certificate
  lineinfile:
    dest: "{{jupyter_config_file}}"
    line: "c.JupyterHub.ssl_cert = '{{jupyter_tls_cert}}'"
  when: nossl == False
  become: yes
  become_method: sudo
  notify: restart jupyterhub

- name: set jupyterhub certificate
  lineinfile:
    dest: "{{jupyter_config_file}}"
    line: "c.JupyterHub.ssl_key = '{{jupyter_tls_key}}'"
  when: nossl == False
  become: yes
  become_method: sudo
  notify: restart jupyterhub

- name: remove ssl setting
  lineinfile:
    dest: "{{jupyter_config_file}}"
    line: "c.JupyterHub.confirm_no_ssl = True"
  when: nossl == True
  become: yes
  become_method: sudo
  notify: restart jupyterhub

- name: set additional config
  blockinfile:
    dest: "{{jupyter_config_file}}"
    block: "{{jupyter_additional_config}}"
  become: yes
  become_method: sudo
  notify: restart jupyterhub

- name: start jupyterhub
  service: name=jupyterhub enabled=yes state=started
  become: yes
  become_method: sudo
  tags: jupyter
